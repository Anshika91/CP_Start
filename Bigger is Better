def find_valid_name(N, A):
    B = list(A)

    # Try to modify B to be lexicographically larger
    for i in range(N - 1, -1, -1):
        if B[i] != 'z':  # If it's not 'z', increase it
            B[i] = chr(ord(B[i]) + 1)
            break
    else:
        return "-1"  # If A is 'zzzz...z', no valid B exists

    B = "".join(B)

    # Ensure both B and B reversed are lexicographically larger than A
    if B > A and B[::-1] > A:
        return B

    # If B[::-1] is not greater, try modifying earlier characters
    B = list(A)
    for i in range(N):
        if B[i] != 'z':  # Increment first possible character
            B[i] = chr(ord(B[i]) + 1)
            B = "".join(B)
            if B > A and B[::-1] > A:
                return B
    return "-1"  # If no valid string was found

# Read number of test cases
T = int(input())

for _ in range(T):
    N = int(input())
    A = input().strip()
    print(find_valid_name(N, A))
